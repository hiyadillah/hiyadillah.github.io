[33mcommit 483fcbc06d9a5b23171a5873f07242090854ffdd[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m)[m
Author: hiyadillah <ilham.iyadillah@gmail.com>
Date:   Sun Aug 28 09:58:13 2022 +0700

    node module

[1mdiff --git a/node_modules/.bin/acorn b/node_modules/.bin/acorn[m
[1mnew file mode 100644[m
[1mindex 0000000..46a3e61[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/acorn[m
[36m@@ -0,0 +1,12 @@[m
[32m+[m[32m#!/bin/sh[m
[32m+[m[32mbasedir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")[m
[32m+[m
[32m+[m[32mcase `uname` in[m
[32m+[m[32m    *CYGWIN*|*MINGW*|*MSYS*) basedir=`cygpath -w "$basedir"`;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32mif [ -x "$basedir/node" ]; then[m
[32m+[m[32m  exec "$basedir/node"  "$basedir/../acorn/bin/acorn" "$@"[m
[32m+[m[32melse[m[41m [m
[32m+[m[32m  exec node  "$basedir/../acorn/bin/acorn" "$@"[m
[32m+[m[32mfi[m
[1mdiff --git a/node_modules/.bin/acorn.cmd b/node_modules/.bin/acorn.cmd[m
[1mnew file mode 100644[m
[1mindex 0000000..a9324df[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/acorn.cmd[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32m@ECHO off[m
[32m+[m[32mGOTO start[m
[32m+[m[32m:find_dp0[m
[32m+[m[32mSET dp0=%~dp0[m
[32m+[m[32mEXIT /b[m
[32m+[m[32m:start[m
[32m+[m[32mSETLOCAL[m
[32m+[m[32mCALL :find_dp0[m
[32m+[m
[32m+[m[32mIF EXIST "%dp0%\node.exe" ([m
[32m+[m[32m  SET "_prog=%dp0%\node.exe"[m
[32m+[m[32m) ELSE ([m
[32m+[m[32m  SET "_prog=node"[m
[32m+[m[32m  SET PATHEXT=%PATHEXT:;.JS;=;%[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32mendLocal & goto #_undefined_# 2>NUL || title %COMSPEC% & "%_prog%"  "%dp0%\..\acorn\bin\acorn" %*[m
[1mdiff --git a/node_modules/.bin/acorn.ps1 b/node_modules/.bin/acorn.ps1[m
[1mnew file mode 100644[m
[1mindex 0000000..6f6dcdd[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/acorn.ps1[m
[36m@@ -0,0 +1,28 @@[m
[32m+[m[32m#!/usr/bin/env pwsh[m
[32m+[m[32m$basedir=Split-Path $MyInvocation.MyCommand.Definition -Parent[m
[32m+[m
[32m+[m[32m$exe=""[m
[32m+[m[32mif ($PSVersionTable.PSVersion -lt "6.0" -or $IsWindows) {[m
[32m+[m[32m  # Fix case when both the Windows and Linux builds of Node[m
[32m+[m[32m  # are installed in the same directory[m
[32m+[m[32m  $exe=".exe"[m
[32m+[m[32m}[m
[32m+[m[32m$ret=0[m
[32m+[m[32mif (Test-Path "$basedir/node$exe") {[m
[32m+[m[32m  # Support pipeline input[m
[32m+[m[32m  if ($MyInvocation.ExpectingInput) {[m
[32m+[m[32m    $input | & "$basedir/node$exe"  "$basedir/../acorn/bin/acorn" $args[m
[32m+[m[32m  } else {[m
[32m+[m[32m    & "$basedir/node$exe"  "$basedir/../acorn/bin/acorn" $args[m
[32m+[m[32m  }[m
[32m+[m[32m  $ret=$LASTEXITCODE[m
[32m+[m[32m} else {[m
[32m+[m[32m  # Support pipeline input[m
[32m+[m[32m  if ($MyInvocation.ExpectingInput) {[m
[32m+[m[32m    $input | & "node$exe"  "$basedir/../acorn/bin/acorn" $args[m
[32m+[m[32m  } else {[m
[32m+[m[32m    & "node$exe"  "$basedir/../acorn/bin/acorn" $args[m
[32m+[m[32m  }[m
[32m+[m[32m  $ret=$LASTEXITCODE[m
[32m+[m[32m}[m
[32m+[m[32mexit $ret[m
[1mdiff --git a/node_modules/.bin/eslint b/node_modules/.bin/eslint[m
[1mnew file mode 100644[m
[1mindex 0000000..4e7c1c9[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/eslint[m
[36m@@ -0,0 +1,12 @@[m
[32m+[m[32m#!/bin/sh[m
[32m+[m[32mbasedir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")[m
[32m+[m
[32m+[m[32mcase `uname` in[m
[32m+[m[32m    *CYGWIN*|*MINGW*|*MSYS*) basedir=`cygpath -w "$basedir"`;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32mif [ -x "$basedir/node" ]; then[m
[32m+[m[32m  exec "$basedir/node"  "$basedir/../eslint/bin/eslint.js" "$@"[m
[32m+[m[32melse[m[41m [m
[32m+[m[32m  exec node  "$basedir/../eslint/bin/eslint.js" "$@"[m
[32m+[m[32mfi[m
[1mdiff --git a/node_modules/.bin/eslint.cmd b/node_modules/.bin/eslint.cmd[m
[1mnew file mode 100644[m
[1mindex 0000000..032901a[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/eslint.cmd[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32m@ECHO off[m
[32m+[m[32mGOTO start[m
[32m+[m[32m:find_dp0[m
[32m+[m[32mSET dp0=%~dp0[m
[32m+[m[32mEXIT /b[m
[32m+[m[32m:start[m
[32m+[m[32mSETLOCAL[m
[32m+[m[32mCALL :find_dp0[m
[32m+[m
[32m+[m[32mIF EXIST "%dp0%\node.exe" ([m
[32m+[m[32m  SET "_prog=%dp0%\node.exe"[m
[32m+[m[32m) ELSE ([m
[32m+[m[32m  SET "_prog=node"[m
[32m+[m[32m  SET PATHEXT=%PATHEXT:;.JS;=;%[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32mendLocal & goto #_undefined_# 2>NUL || title %COMSPEC% & "%_prog%"  "%dp0%\..\eslint\bin\eslint.js" %*[m
[1mdiff --git a/node_modules/.bin/eslint.ps1 b/node_modules/.bin/eslint.ps1[m
[1mnew file mode 100644[m
[1mindex 0000000..155bec4[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/eslint.ps1[m
[36m@@ -0,0 +1,28 @@[m
[32m+[m[32m#!/usr/bin/env pwsh[m
[32m+[m[32m$basedir=Split-Path $MyInvocation.MyCommand.Definition -Parent[m
[32m+[m
[32m+[m[32m$exe=""[m
[32m+[m[32mif ($PSVersionTable.PSVersion -lt "6.0" -or $IsWindows) {[m
[32m+[m[32m  # Fix case when both the Windows and Linux builds of Node[m
[32m+[m[32m  # are installed in the same directory[m
[32m+[m[32m  $exe=".exe"[m
[32m+[m[32m}[m
[32m+[m[32m$ret=0[m
[32m+[m[32mif (Test-Path "$basedir/node$exe") {[m
[32m+[m[32m  # Support pipeline input[m
[32m+[m[32m  if ($MyInvocation.ExpectingInput) {[m
[32m+[m[32m    $input | & "$basedir/node$exe"  "$basedir/../eslint/bin/eslint.js" $args[m
[32m+[m[32m  } else {[m
[32m+[m[32m    & "$basedir/node$exe"  "$basedir/../eslint/bin/eslint.js" $args[m
[32m+[m[32m  }[m
[32m+[m[32m  $ret=$LASTEXITCODE[m
[32m+[m[32m} else {[m
[32m+[m[32m  # Support pipeline input[m
[32m+[m[32m  if ($MyInvocation.ExpectingInput) {[m
[32m+[m[32m    $input | & "node$exe"  "$basedir/../eslint/bin/eslint.js" $args[m
[32m+[m[32m  } else {[m
[32m+[m[32m    & "node$exe"  "$basedir/../eslint/bin/eslint.js" $args[m
[32m+[m[32m  }[m
[32m+[m[32m  $ret=$LASTEXITCODE[m
[32m+[m[32m}[m
[32m+[m[32mexit $ret[m
[1mdiff --git a/node_modules/.bin/js-yaml b/node_modules/.bin/js-yaml[m
[1mnew file mode 100644[m
[1mindex 0000000..ed78a86[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/js-yaml[m
[36m@@ -0,0 +1,12 @@[m
[32m+[m[32m#!/bin/sh[m
[32m+[m[32mbasedir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")[m
[32m+[m
[32m+[m[32mcase `uname` in[m
[32m+[m[32m    *CYGWIN*|*MINGW*|*MSYS*) basedir=`cygpath -w "$basedir"`;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32mif [ -x "$basedir/node" ]; then[m
[32m+[m[32m  exec "$basedir/node"  "$basedir/../js-yaml/bin/js-yaml.js" "$@"[m
[32m+[m[32melse[m[41m [m
[32m+[m[32m  exec node  "$basedir/../js-yaml/bin/js-yaml.js" "$@"[m
[32m+[m[32mfi[m
[1mdiff --git a/node_modules/.bin/js-yaml.cmd b/node_modules/.bin/js-yaml.cmd[m
[1mnew file mode 100644[m
[1mindex 0000000..453312b[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/js-yaml.cmd[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32m@ECHO off[m
[32m+[m[32mGOTO start[m
[32m+[m[32m:find_dp0[m
[32m+[m[32mSET dp0=%~dp0[m
[32m+[m[32mEXIT /b[m
[32m+[m[32m:start[m
[32m+[m[32mSETLOCAL[m
[32m+[m[32mCALL :find_dp0[m
[32m+[m
[32m+[m[32mIF EXIST "%dp0%\node.exe" ([m
[32m+[m[32m  SET "_prog=%dp0%\node.exe"[m
[32m+[m[32m) ELSE ([m
[32m+[m[32m  SET "_prog=node"[m
[32m+[m[32m  SET PATHEXT=%PATHEXT:;.JS;=;%[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32mendLocal & goto #_undefined_# 2>NUL || title %COMSPEC% & "%_prog%"  "%dp0%\..\js-yaml\bin\js-yaml.js" %*[m
[1mdiff --git a/node_modules/.bin/js-yaml.ps1 b/node_modules/.bin/js-yaml.ps1[m
[1mnew file mode 100644[m
[1mindex 0000000..2acfc61[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/js-yaml.ps1[m
[36m@@ -0,0 +1,28 @@[m
[32m+[m[32m#!/usr/bin/env pwsh[m
[32m+[m[32m$basedir=Split-Path $MyInvocation.MyCommand.Definition -Parent[m
[32m+[m
[32m+[m[32m$exe=""[m
[32m+[m[32mif ($PSVersionTable.PSVersion -lt "6.0" -or $IsWindows) {[m
[32m+[m[32m  # Fix case when both the Windows and Linux builds of Node[m
[32m+[m[32m  # are installed in the same directory[m
[32m+[m[32m  $exe=".exe"[m
[32m+[m[32m}[m
[32m+[m[32m$ret=0[m
[32m+[m[32mif (Test-Path "$basedir/node$exe") {[m
[32m+[m[32m  # Support pipeline input[m
[32m+[m[32m  if ($MyInvocation.ExpectingInput) {[m
[32m+[m[32m    $input | & "$basedir/node$exe"  "$basedir/../js-yaml/bin/js-yaml.js" $args[m
[32m+[m[32m  } else {[m
[32m+[m[32m    & "$basedir/node$exe"  "$basedir/../js-yaml/bin/js-yaml.js" $args[m
[32m+[m[32m  }[m
[32m+[m[32m  $ret=$LASTEXITCODE[m
[32m+[m[32m} else {[m
[32m+[m[32m  # Support pipeline input[m
[32m+[m[32m  if ($MyInvocation.ExpectingInput) {[m
[32m+[m[32m    $input | & "node$exe"  "$basedir/../js-yaml/bin/js-yaml.js" $args[m
[32m+[m[32m  } else {[m
[32m+[m[32m    & "node$exe"  "$basedir/../js-yaml/bin/js-yaml.js" $args[m
[32m+[m[32m  }[m
[32m+[m[32m  $ret=$LASTEXITCODE[m
[32m+[m[32m}[m
[32m+[m[32mexit $ret[m
[1mdiff --git a/node_modules/.bin/json5 b/node_modules/.bin/json5[m
[1mnew file mode 100644[m
[1mindex 0000000..977b750[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/json5[m
[36m@@ -0,0 +1,12 @@[m
[32m+[m[32m#!/bin/sh[m
[32m+[m[32mbasedir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")[m
[32m+[m
[32m+[m[32mcase `uname` in[m
[32m+[m[32m    *CYGWIN*|*MINGW*|*MSYS*) basedir=`cygpath -w "$basedir"`;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32mif [ -x "$basedir/node" ]; then[m
[32m+[m[32m  exec "$basedir/node"  "$basedir/../json5/lib/cli.js" "$@"[m
[32m+[m[32melse[m[41m [m
[32m+[m[32m  exec node  "$basedir/../json5/lib/cli.js" "$@"[m
[32m+[m[32mfi[m
[1mdiff --git a/node_modules/.bin/json5.cmd b/node_modules/.bin/json5.cmd[m
[1mnew file mode 100644[m
[1mindex 0000000..95c137f[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/json5.cmd[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32m@ECHO off[m
[32m+[m[32mGOTO start[m
[32m+[m[32m:find_dp0[m
[32m+[m[32mSET dp0=%~dp0[m
[32m+[m[32mEXIT /b[m
[32m+[m[32m:start[m
[32m+[m[32mSETLOCAL[m
[32m+[m[32mCALL :find_dp0[m
[32m+[m
[32m+[m[32mIF EXIST "%dp0%\node.exe" ([m
[32m+[m[32m  SET "_prog=%dp0%\node.exe"[m
[32m+[m[32m) ELSE ([m
[32m+[m[32m  SET "_prog=node"[m
[32m+[m[32m  SET PATHEXT=%PATHEXT:;.JS;=;%[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32mendLocal & goto #_undefined_# 2>NUL || title %COMSPEC% & "%_prog%"  "%dp0%\..\json5\lib\cli.js" %*[m
[1mdiff --git a/node_modules/.bin/json5.ps1 b/node_modules/.bin/json5.ps1[m
[1mnew file mode 100644[m
[1mindex 0000000..8700ddb[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/json5.ps1[m
[36m@@ -0,0 +1,28 @@[m
[32m+[m[32m#!/usr/bin/env pwsh[m
[32m+[m[32m$basedir=Split-Path $MyInvocation.MyCommand.Definition -Parent[m
[32m+[m
[32m+[m[32m$exe=""[m
[32m+[m[32mif ($PSVersionTable.PSVersion -lt "6.0" -or $IsWindows) {[m
[32m+[m[32m  # Fix case when both the Windows and Linux builds of Node[m
[32m+[m[32m  # are installed in the same directory[m
[32m+[m[32m  $exe=".exe"[m
[32m+[m[32m}[m
[32m+[m[32m$ret=0[m
[32m+[m[32mif (Test-Path "$basedir/node$exe") {[m
[32m+[m[32m  # Support pipeline input[m
[32m+[m[32m  if ($MyInvocation.ExpectingInput) {[m
[32m+[m[32m    $input | & "$basedir/node$exe"  "$basedir/../json5/lib/cli.js" $args[m
[32m+[m[32m  } else {[m
[32m+[m[32m    & "$basedir/node$exe"  "$basedir/../json5/lib/cli.js" $args[m
[32m+[m[32m  }[m
[32m+[m[32m  $ret=$LASTEXITCODE[m
[32m+[m[32m} else {[m
[32m+[m[32m  # Support pipeline input[m
[32m+[m[32m  if ($MyInvocation.ExpectingInput) {[m
[32m+[m[32m    $input | & "node$exe"  "$basedir/../json5/lib/cli.js" $args[m
[32m+[m[32m  } else {[m
[32m+[m[32m    & "node$exe"  "$basedir/../json5/lib/cli.js" $args[m
[32m+[m[32m  }[m
[32m+[m[32m  $ret=$LASTEXITCODE[m
[32m+[m[32m}[m
[32m+[m[32mexit $ret[m
[1mdiff --git a/node_modules/.bin/loose-envify b/node_modules/.bin/loose-envify[m
[1mnew file mode 100644[m
[1mindex 0000000..60598cb[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/loose-envify[m
[36m@@ -0,0 +1,12 @@[m
[32m+[m[32m#!/bin/sh[m
[32m+[m[32mbasedir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")[m
[32m+[m
[32m+[m[32mcase `uname` in[m
[32m+[m[32m    *CYGWIN*|*MINGW*|*MSYS*) basedir=`cygpath -w "$basedir"`;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32mif [ -x "$basedir/node" ]; then[m
[32m+[m[32m  exec "$basedir/node"  "$basedir/../loose-envify/cli.js" "$@"[m
[32m+[m[32melse[m[41m [m
[32m+[m[32m  exec node  "$basedir/../loose-envify/cli.js" "$@"[m
[32m+[m[32mfi[m
[1mdiff --git a/node_modules/.bin/loose-envify.cmd b/node_modules/.bin/loose-envify.cmd[m
[1mnew file mode 100644[m
[1mindex 0000000..599576f[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/loose-envify.cmd[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32m@ECHO off[m
[32m+[m[32mGOTO start[m
[32m+[m[32m:find_dp0[m
[32m+[m[32mSET dp0=%~dp0[m
[32m+[m[32mEXIT /b[m
[32m+[m[32m:start[m
[32m+[m[32mSETLOCAL[m
[32m+[m[32mCALL :find_dp0[m
[32m+[m
[32m+[m[32mIF EXIST "%dp0%\node.exe" ([m
[32m+[m[32m  SET "_prog=%dp0%\node.exe"[m
[32m+[m[32m) ELSE ([m
[32m+[m[32m  SET "_prog=node"[m
[32m+[m[32m  SET PATHEXT=%PATHEXT:;.JS;=;%[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32mendLocal & goto #_undefined_# 2>NUL || title %COMSPEC% & "%_prog%"  "%dp0%\..\loose-envify\cli.js" %*[m
[1mdiff --git a/node_modules/.bin/loose-envify.ps1 b/node_modules/.bin/loose-envify.ps1[m
[1mnew file mode 100644[m
[1mindex 0000000..eb866fc[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/loose-envify.ps1[m
[36m@@ -0,0 +1,28 @@[m
[32m+[m[32m#!/usr/bin/env pwsh[m
[32m+[m[32m$basedir=Split-Path $MyInvocation.MyCommand.Definition -Parent[m
[32m+[m
[32m+[m[32m$exe=""[m
[32m+[m[32mif ($PSVersionTable.PSVersion -lt "6.0" -or $IsWindows) {[m
[32m+[m[32m  # Fix case when both the Windows and Linux builds of Node[m
[32m+[m[32m  # are installed in the same directory[m
[32m+[m[32m  $exe=".exe"[m
[32m+[m[32m}[m
[32m+[m[32m$ret=0[m
[32m+[m[32mif (Test-Path "$basedir/node$exe") {[m
[32m+[m[32m  # Support pipeline input[m
[32m+[m[32m  if ($MyInvocation.ExpectingInput) {[m
[32m+[m[32m    $input | & "$basedir/node$exe"  "$basedir/../loose-envify/cli.js" $args[m
[32m+[m[32m  } else {[m
[32m+[m[32m    & "$basedir/node$exe"  "$basedir/../loose-envify/cli.js" $args[m
[32m+[m[32m  }[m
[32m+[m[32m  $ret=$LASTEXITCODE[m
[32m+[m[32m} else {[m
[32m+[m[32m  # Support pipeline input[m
[32m+[m[32m  if ($MyInvocation.ExpectingInput) {[m
[32m+[m[32m    $input | & "node$exe"  "$basedir/../loose-envify/cli.js" $args[m
[32m+[m[32m  } else {[m
[32m+[m[32m    & "node$exe"  "$basedir/../loose-envify/cli.js" $args[m
[32m+[m[32m  }[m
[32m+[m[32m  $ret=$LASTEXITCODE[m
[32m+[m[32m}[m
[32m+[m[32mexit $ret[m
[1mdiff --git a/node_modules/.bin/nanoid b/node_modules/.bin/nanoid[m
[1mnew file mode 100644[m
[1mindex 0000000..23254eb[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/nanoid[m
[36m@@ -0,0 +1,12 @@[m
[32m+[m[32m#!/bin/sh[m
[32m+[m[32mbasedir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")[m
[32m+[m
[32m+[m[32mcase `uname` in[m
[32m+[m[32m    *CYGWIN*|*MINGW*|*MSYS*) basedir=`cygpath -w "$basedir"`;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32mif [ -x "$basedir/node" ]; then[m
[32m+[m[32m  exec "$basedir/node"  "$basedir/../nanoid/bin/nanoid.cjs" "$@"[m
[32m+[m[32melse[m[41m [m
[32m+[m[32m  exec node  "$basedir/../nanoid/bin/nanoid.cjs" "$@"[m
[32m+[m[32mfi[m
[1mdiff --git a/node_modules/.bin/nanoid.cmd b/node_modules/.bin/nanoid.cmd[m
[1mnew file mode 100644[m
[1mindex 0000000..9c40107[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/nanoid.cmd[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32m@ECHO off[m
[32m+[m[32mGOTO start[m
[32m+[m[32m:find_dp0[m
[32m+[m[32mSET dp0=%~dp0[m
[32m